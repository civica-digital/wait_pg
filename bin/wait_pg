#!/usr/bin/env ruby
require 'erb'
require 'pg'
require 'yaml'

SUCCESS = 0
ERROR = 1

def connection_options
  rails_env = ENV.fetch('RAILS_ENV') { 'development' }

  path = File.expand_path('./config/database.yml')
  yaml = YAML.load(ERB.new(File.read(path)).result)[rails_env]

  # Active Record uses it as a default
  return ENV['DATABASE_URL'] unless yaml

  # Set the default adapter (for cases like PostGIS)
  config = yaml['url'].sub(/^.*:\/\//, 'postgres://') if yaml['url']

  config ||= {
    user: yaml['username'],
    host: yaml['host'],
    password: yaml['password'],
    port: yaml['port'],
  }

  config ||= ENV['DATABASE_URL']
end

def connection_successful?
  PG::PQPING_OK == PG::Connection.ping(connection_options)
end

# Wait for 60 seconds for a connection
retries = 30
interval = 2

puts 'Waiting for PostgreSQL...'

retries.times do
  exit SUCCESS if connection_successful?
  sleep interval
end

exit ERROR
